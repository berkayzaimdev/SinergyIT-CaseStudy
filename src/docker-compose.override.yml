version: '3.4'

services:

  sonarqube:
    container_name: sonarqube
    depends_on:
      - sonarqubedb
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqubedb:5432/sonarqube
      - SONAR_JDBC_USERNAME=postgres
      - SONAR_JDBC_PASSWORD=postgres
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs

  sonarqubedb:
    container_name: sonarqubedb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sonarqube
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - sonarqubedb:/var/lib/postgresql/data/

  sonarscanner:
    container_name: sonarscanner
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - ./:/app
    working_dir: /app

  gitea:
    container_name: gitea
    depends_on:
      - giteadb
    ports:
      - "3000:3000"
      - "222:22"
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=giteadb:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=postgres
      - GITEA__database__PASSWD=postgres
    volumes:
      - gitea_data:/data
    restart: always

  giteadb:
    container_name: giteadb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gitea
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - giteadb:/var/lib/postgresql/data/

  jenkins:
    container_name: jenkins
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock 
      - /usr/bin/docker:/usr/bin/docker
    restart: always

  redis:
    container_name: redis
    restart: always
    ports:
        - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  catalogdb:
    container_name: catalogdb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@catalogdb:27017/
      ME_CONFIG_BASICAUTH: false

  identitydb:
    container_name: identitydb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: IdentityDb
    restart: always
    ports:
      - "5434:5432"
    volumes:
      - postgres_identity:/var/lib/postgresql/data/

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__MongoDB=mongodb://root:example@catalogdb:27017/
      - ConnectionStrings__Redis=redis:6379
      - RabbitMq__Host=amqp://ecommerce-mq:5672
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  identity.api:
    container_name: identity.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__IdentityDb=Server=identitydb;Port=5432;Database=IdentityDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on: 
      - identitydb
    ports:
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Redis=redis:6379
      - RabbitMq__Host=amqp://ecommerce-mq:5672
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
